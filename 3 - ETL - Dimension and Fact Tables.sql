## Creating Dimensions and Fact Tables according to the Business Problem


CREATE DATABASE ONLINE_STORE_DWH; 	## DWH DB is created where required data will be inserted from raw tables 
CREATE SCHEMA ONLINE_STORE_DWH;

--TABLES (DIMENSIONS AND FACTS TABLES)

create or replace TABLE ONLINE_STORE_DWH.ONLINE_STORE_DWH.D_CUSTOMER (
	CUSTOMER_ID NUMBER(38,0) NOT NULL,
	CUSTOMER_NAME VARCHAR(50),
	CUSTOMER_ZIP_CD VARCHAR(50),
	primary key (CUSTOMER_ID),
	foreign key (CUSTOMER_ZIP_CD) references ONLINE_STORE_DWH.ONLINE_STORE_DWH.D_CUSTOMER_GEOGRAPHY(ZIP_CODE)
);

create or replace TABLE ONLINE_STORE_DWH.ONLINE_STORE_DWH.D_CUSTOMER_GEOGRAPHY (
	ZIP_CODE VARCHAR(50) NOT NULL,
	STATE_CODE VARCHAR(50),
	primary key (ZIP_CODE)
);

create or replace TABLE ONLINE_STORE_DWH.ONLINE_STORE_DWH.D_PRODUCT (
	PRODUCT_ID NUMBER(38,0) NOT NULL,
	PRODUCT_NAME VARCHAR(100),
	CATEGORY_ID NUMBER(38,0),
	primary key (PRODUCT_ID),
	foreign key (CATEGORY_ID) references ONLINE_STORE_DWH.ONLINE_STORE_DWH.D_PRODUCT_CATEGORY(CATEGORY_ID)
);
create or replace TABLE ONLINE_STORE_DWH.ONLINE_STORE_DWH.D_PRODUCT_CATEGORY (
	CATEGORY_ID NUMBER(38,0) NOT NULL,
	CATEGORY_NAME VARCHAR(100),
	primary key (CATEGORY_ID)
);

create or replace TABLE ONLINE_STORE_DWH.ONLINE_STORE_DWH.F_ORDERS (
	ORDER_ID NUMBER(38,0) NOT NULL,
	CUSTOMER_ID NUMBER(38,0),
	PRODUCT_ID NUMBER(38,0),
	UNIT_PRICE NUMBER(38,0),
	QUANTITY NUMBER(38,0),
	DISCOUNT NUMBER(38,0),
	TOTAL_PRICE NUMBER(38,0),
	ORDER_DATE DATE,
	primary key (ORDER_ID),
	foreign key (CUSTOMER_ID) references ONLINE_STORE_DWH.ONLINE_STORE_DWH.D_CUSTOMER(CUSTOMER_ID),
	foreign key (PRODUCT_ID) references ONLINE_STORE_DWH.ONLINE_STORE_DWH.D_PRODUCT(PRODUCT_ID)
);
